import{_ as s}from"./plugin-vue_export-helper-c27b6911.js";import{r,o as d,c as l,b as a,d as e,e as t,a as c,f as i}from"./app-4a157848.js";const o={},u={href:"https://www.elastic.co/",target:"_blank",rel:"noopener noreferrer"},h=a("br",null,null,-1),v=a("h2",{id:"_1-马上开始安装",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#_1-马上开始安装","aria-hidden":"true"},"#"),e(" 1. 马上开始安装")],-1),b=a("h3",{id:"_1-1-安装-elasticsearch-kibana-x-pack",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#_1-1-安装-elasticsearch-kibana-x-pack","aria-hidden":"true"},"#"),e(" 1.1 安装 Elasticsearch + Kibana (+ X-Pack)")],-1),p={href:"https://www.elastic.co/start",target:"_blank",rel:"noopener noreferrer"},_=i(`<h3 id="_1-2-遇到的问题" tabindex="-1"><a class="header-anchor" href="#_1-2-遇到的问题" aria-hidden="true">#</a> 1.2 遇到的问题</h3><p>因为安全方面的考虑这些组件默认只能在非 ROOT 用户下开启，ROOT 用户开启会被拒绝并报错<br> 对于我只有 ROOT 用户的测试环境创建一个用户来使用</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>useradd 用户
passwd 密码
chown -R 用户 /那些组件的目录
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>打开 Kibana 的地址是</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>http://localhost:5601
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>但是当我们需要在非本机访问时（例如我在 Linux 虚拟机下安装在 Win 下访问<br> 需要修改配置文件 /KIBANA_HOME/config/kibana.yml 中的 server.host<br> 默认为回环地址，不允许远程用户访问</p><p>我修改为</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>server.host: 192.168.231.233
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>修改后的远程访问地址为</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>http://192.168.231.233:5601
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_2-马上开始试用" tabindex="-1"><a class="header-anchor" href="#_2-马上开始试用" aria-hidden="true">#</a> 2. 马上开始试用</h2>`,11),m={href:"https://www.elastic.co/guide/en/kibana/current/getting-started.html",target:"_blank",rel:"noopener noreferrer"},g=a("br",null,null,-1),x={href:"http://blog.csdn.net/ming_311/article/details/50619859",target:"_blank",rel:"noopener noreferrer"},q=a("br",null,null,-1),f=i(`<h3 id="_2-1-遇到的问题" tabindex="-1"><a class="header-anchor" href="#_2-1-遇到的问题" aria-hidden="true">#</a> 2.1 遇到的问题</h3><p>官网教程里 curl 直接用例如</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>curl -XPUT
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>可是安装了 X-Pack 后是有安全防护的需要用户名和密码才能操作<br> 安装完默认为 Username: elastic Password: changeme</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>curl --user elastic -XPUT
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>之后按提示输入密码就可以正常使用 curl 了</p><h3 id="_2-2-简例一个流程" tabindex="-1"><a class="header-anchor" href="#_2-2-简例一个流程" aria-hidden="true">#</a> 2.2 简例一个流程</h3><p>为莎士比亚数据集建立一个索引（index）</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>curl --user elastic -XPUT http://localhost:9200/shakespeare -d &#39;
{
 &quot;mappings&quot; : {
  &quot;_default_&quot; : {
   &quot;properties&quot; : {
    &quot;speaker&quot; : {&quot;type&quot;: &quot;string&quot;, &quot;index&quot; : &quot;not_analyzed&quot; },
    &quot;play_name&quot; : {&quot;type&quot;: &quot;string&quot;, &quot;index&quot; : &quot;not_analyzed&quot; },
    &quot;line_id&quot; : { &quot;type&quot; : &quot;integer&quot; },
    &quot;speech_number&quot; : { &quot;type&quot; : &quot;integer&quot; }
   }
  }
 }
}
&#39;;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用 Elasticsearch 的批量导入 API 输入数据</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>curl --user elastic -XPOST &#39;localhost:9200/shakespeare/_bulk?pretty&#39; --data-binary @shakespeare.json
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>使用如下命令验证成功导入</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>curl --user elastic &#39;localhost:9200/_cat/indices?v&#39;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>访问 Kibana 会提示没有索引匹配模式（index pattern）需要定义以便匹配索引<br> 之后就是图形界面下的操作了 选择之前定义的索引匹配模式 -&gt; discover -&gt; visualize -&gt; dashboard<br> 这边需要注意的以及怎么做文档里都有了，图形界面也好理解</p><h3 id="_2-3-遇到的问题" tabindex="-1"><a class="header-anchor" href="#_2-3-遇到的问题" aria-hidden="true">#</a> 2.3 遇到的问题</h3>`,15),k={href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/docs-bulk.html",target:"_blank",rel:"noopener noreferrer"},w=a("br",null,null,-1),y=a("br",null,null,-1);function E(K,O){const n=r("ExternalLinkIcon");return d(),l("div",null,[a("p",null,[e("被 Kibana 的外表吸引，试着了解了一下 "),a("a",u,[e("Elasticsearch + Kibana"),t(n)]),h,e(" 记录备忘")]),c("more"),v,b,a("p",null,[e("官网提供了 "),a("a",p,[e("简洁的安装指导"),t(n)])]),_,a("p",null,[e("跟着官网的例子 "),a("a",m,[e("Getting Started"),t(n)]),e(" 了解一下 Elasticsearch + Kibana 的流程"),g,e(" 同时有中文转述在这里 "),a("a",x,[e("Kibana基本使用"),t(n)]),e(" 是基本一样的内容"),q,e(" 里面用到的数据文件都有提供下载")]),f,a("p",null,[e("需要注意 _bulk 接口的 "),a("a",k,[e("使用方式"),t(n)]),w,e(" 例子里给的数据文件都是已经符合接口要求的 newline delimited JSON (NDJSON)"),y,e(" 自己在看完例子马上用自己的数据进行一些尝试时可能会忘了这个问题")])])}const T=s(o,[["render",E],["__file","Elasticsearch_Kibana.html.vue"]]);export{T as default};
