const e=JSON.parse('{"key":"v-66a6a132","path":"/posts/Archives/Logstash_Backup.html","title":"Logstash","lang":"zh-CN","frontmatter":{"title":"Logstash","date":"2017-10-11T00:00:00.000Z","category":["软件工具"],"tag":["Logstash","日志"],"description":"Logstash 简单试用备忘 1. 从数据库里面输入开始试用 看 官网相关的教学blog 后用自己的 Mysql 测试 1.1. Mysql mysql_to_elasticsearch.conf --------------------------- input { jdbc { # Postgres jdbc connection string to our database, mydb jdbc_connection_string =&gt; \\"jdbc:mysql://localhost:3306/databasename?characterEncoding=UTF-8&amp;useSSL=false\\" # The user we wish to execute our statement as jdbc_user =&gt; \\"username\\" jdbc_password =&gt; \\"password\\" # The path to our downloaded jdbc driver jdbc_driver_library =&gt; \\"D:\\\\Applications\\\\logstash-5.6.3\\\\test_logstash_mysql\\\\mysql-connector-java-5.1.44-bin.jar\\" # The name of the driver class for Postgresql jdbc_driver_class =&gt; \\"com.mysql.jdbc.Driver\\" # our query statement =&gt; \\"SELECT * from user\\" # 定时运行 schedule =&gt; \\"* * * * *\\" # 是否全量同步 clean_run =&gt; \\"false\\" } } output { elasticsearch { index =&gt; \\"users\\" document_type =&gt; \\"user\\" document_id =&gt; \\"%{id}\\" hosts =&gt; \\"http://localhost:9200/\\" } }","head":[["meta",{"property":"og:url","content":"https://blog.nerv.love/posts/Archives/Logstash_Backup.html"}],["meta",{"property":"og:site_name","content":"KnightOfBatons Blog"}],["meta",{"property":"og:title","content":"Logstash"}],["meta",{"property":"og:description","content":"Logstash 简单试用备忘 1. 从数据库里面输入开始试用 看 官网相关的教学blog 后用自己的 Mysql 测试 1.1. Mysql mysql_to_elasticsearch.conf --------------------------- input { jdbc { # Postgres jdbc connection string to our database, mydb jdbc_connection_string =&gt; \\"jdbc:mysql://localhost:3306/databasename?characterEncoding=UTF-8&amp;useSSL=false\\" # The user we wish to execute our statement as jdbc_user =&gt; \\"username\\" jdbc_password =&gt; \\"password\\" # The path to our downloaded jdbc driver jdbc_driver_library =&gt; \\"D:\\\\Applications\\\\logstash-5.6.3\\\\test_logstash_mysql\\\\mysql-connector-java-5.1.44-bin.jar\\" # The name of the driver class for Postgresql jdbc_driver_class =&gt; \\"com.mysql.jdbc.Driver\\" # our query statement =&gt; \\"SELECT * from user\\" # 定时运行 schedule =&gt; \\"* * * * *\\" # 是否全量同步 clean_run =&gt; \\"false\\" } } output { elasticsearch { index =&gt; \\"users\\" document_type =&gt; \\"user\\" document_id =&gt; \\"%{id}\\" hosts =&gt; \\"http://localhost:9200/\\" } }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-06-17T15:10:27.000Z"}],["meta",{"property":"article:author","content":"KnightOfBatons"}],["meta",{"property":"article:tag","content":"Logstash"}],["meta",{"property":"article:tag","content":"日志"}],["meta",{"property":"article:published_time","content":"2017-10-11T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-06-17T15:10:27.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Logstash\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2017-10-11T00:00:00.000Z\\",\\"dateModified\\":\\"2023-06-17T15:10:27.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"KnightOfBatons\\",\\"url\\":\\"https://blog.nerv.love\\"}]}"]]},"headers":[{"level":2,"title":"1. 从数据库里面输入开始试用","slug":"_1-从数据库里面输入开始试用","link":"#_1-从数据库里面输入开始试用","children":[{"level":3,"title":"1.1. Mysql","slug":"_1-1-mysql","link":"#_1-1-mysql","children":[]},{"level":3,"title":"1.2. SqlServer","slug":"_1-2-sqlserver","link":"#_1-2-sqlserver","children":[]},{"level":3,"title":"1.3. PS","slug":"_1-3-ps","link":"#_1-3-ps","children":[]}]},{"level":2,"title":"2. 日志文件作为输入试用","slug":"_2-日志文件作为输入试用","link":"#_2-日志文件作为输入试用","children":[{"level":3,"title":"2.1. 两个日志文件","slug":"_2-1-两个日志文件","link":"#_2-1-两个日志文件","children":[]},{"level":3,"title":"2.2. PS","slug":"_2-2-ps","link":"#_2-2-ps","children":[]},{"level":3,"title":"2.3. 配置文件分开写","slug":"_2-3-配置文件分开写","link":"#_2-3-配置文件分开写","children":[]},{"level":3,"title":"2.4. PS","slug":"_2-4-ps","link":"#_2-4-ps","children":[]}]}],"git":{"createdTime":1687014627000,"updatedTime":1687014627000,"contributors":[{"name":"Yu Chen","email":"knightofbatons@hotmail.com","commits":1}]},"readingTime":{"minutes":3.73,"words":1118},"filePathRelative":"posts/Archives/Logstash_Backup.md","localizedDate":"2017年10月11日","excerpt":"<p>Logstash 简单试用备忘</p>\\n<!--more-->\\n<h2> 1. 从数据库里面输入开始试用</h2>\\n<p>看 <a href=\\"https://www.elastic.co/blog/logstash-jdbc-input-plugin\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">官网相关的教学blog</a> 后用自己的 Mysql 测试</p>\\n<h3> 1.1. Mysql</h3>\\n<div class=\\"language-text line-numbers-mode\\" data-ext=\\"text\\"><pre class=\\"language-text\\"><code>mysql_to_elasticsearch.conf\\n---------------------------\\ninput {\\n    jdbc {\\n        # Postgres jdbc connection string to our database, mydb\\n        jdbc_connection_string =&gt; \\"jdbc:mysql://localhost:3306/databasename?characterEncoding=UTF-8&amp;useSSL=false\\"  \\n        # The user we wish to execute our statement as\\n        jdbc_user =&gt; \\"username\\"\\n        jdbc_password =&gt; \\"password\\"\\n        # The path to our downloaded jdbc driver\\n        jdbc_driver_library =&gt; \\"D:\\\\Applications\\\\logstash-5.6.3\\\\test_logstash_mysql\\\\mysql-connector-java-5.1.44-bin.jar\\"\\n        # The name of the driver class for Postgresql\\n        jdbc_driver_class =&gt; \\"com.mysql.jdbc.Driver\\"\\n        # our query\\n        statement =&gt; \\"SELECT * from user\\"\\n        # 定时运行\\n        schedule =&gt; \\"* * * * *\\"\\n        # 是否全量同步\\n        clean_run =&gt; \\"false\\"\\n    }\\n}\\noutput {\\n    elasticsearch {\\n        index =&gt; \\"users\\"\\n        document_type =&gt; \\"user\\"\\n        document_id =&gt; \\"%{id}\\"\\n        hosts =&gt; \\"http://localhost:9200/\\"\\n    }\\n}\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{e as data};
