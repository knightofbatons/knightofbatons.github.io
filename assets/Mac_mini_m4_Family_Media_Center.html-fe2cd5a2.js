import{_ as t}from"./plugin-vue_export-helper-c27b6911.js";import{r as a,o,c as r,a as u,b as n,d as e,e as s,f as i}from"./app-1672329c.js";const c="/assets/blog_images/mac_mini/app.png",p="/assets/blog_images/mac_mini/Jellyfin.gif",d="/assets/blog_images/mac_mini/Infuse.gif",_="/assets/blog_images/mac_mini/PTPP_20250131.jpeg",h="/assets/blog_images/mac_mini/SSD.jpg",m="/assets/blog_images/mac_mini/LG_TV.gif",b="/assets/blog_images/mac_mini/NET.jpeg",v="/assets/blog_images/mac_mini/UNICOM.jpeg",k={},f=n("p",null,[e("Mac mini M4 运行功耗很低，且我的主要用途下基本不会关机，"),n("br"),e(" 顺便让它承担 “家庭媒体服务” 的任务，扮演一定 NAS 的角色就很合理（专门干这个性价比实在不高），"),n("br"),e(" 本记录用于自我备忘、发给朋友，仅供参考")],-1),g=n("p",null,"文字使用 列表组织 是方便直接按级别跳跃查看，不可避免的造成内容过长，请使用目录功能跳转",-1),x=i('<h2 id="_1-购买" tabindex="-1"><a class="header-anchor" href="#_1-购买" aria-hidden="true">#</a> 1.购买</h2><ul><li>Mac mini M4 <ul><li>京东 3400+ 购入（国家补贴）</li><li>16GB 统一内存</li><li>256GB 固态硬盘</li><li>正面：两个 USB-C 端口，耳机插孔</li><li>背面：三个雷雳 4 端口，HDMI 端口，千兆以太网端口</li></ul></li><li>WERO 雷电3 硬盘盒 <ul><li>天猫 580+ 购入</li><li>JHL7440+JMS583 双控方案</li></ul></li><li>致态 TiPlus7100 4TB NVMe M.2 SSD 固态硬盘 <ul><li>京东 1700+ 购入</li></ul></li></ul><h2 id="_2-软件" tabindex="-1"><a class="header-anchor" href="#_2-软件" aria-hidden="true">#</a> 2.软件</h2><figure><img src="'+c+'" alt="流程示意" tabindex="0" loading="lazy"><figcaption>流程示意</figcaption></figure><p>一系列软件 基础配置 和 观影流程 差不多是这样的：</p><ul><li>安装 Homebrew 统一管理安装软件</li><li>Homebrew 安装媒体服务器 Jellyfin，并配置 <ul><li>控制台/媒体库 规划好文件夹 <ul><li>元数据存储方式使用 NFO 文件就好，不使用自带的刮削功能</li></ul></li><li>控制台/播放/转码 设定硬件加速 等选项 <ul><li>硬件加速对在移动端播放是必要的，因为可能需要转码以适应移动端的播放需求</li><li>设定备用字体文件路径并启用，解决外挂中文字幕编码显示为方块的问题</li></ul></li><li>控制台/我的插件 安装需要的插件如 DLNA 等</li></ul></li><li>手机/电视/Pad 等需要观影的客户端安装 Jellyfin/Infuse/VidHub 等合适的客户端，并配置服务端为你的 Jellyfin</li><li>Homebrew 安装下载器 qBittorrent</li><li>准备好媒体下载来源 PT 站</li><li>Homebrew 安装 OrbStack 提供 Docker 环境</li><li>有了 Docker 环境后 Docker Compose 安装媒体库自动化管理工具 MP 并配置 <ul><li>设定/系统 配置 媒体服务器 和 下载器</li><li>设定/存储&amp;目录 配置目录 <ul><li>这边是把 媒体库 和 下载库 分开 <ul><li>下载后存储到 下载库 的文件 MP 自动整理 到 媒体库</li><li>媒体库无论是 硬链接、软连接 下载库 文件，都可以随便改名随便删，不会影响 下载库 里面文件的做种</li></ul></li></ul></li><li>设定/站点 配置站点同步，配合 CookieCloud 插件同步浏览器中已登陆站点的 Cookie 以批量自动添加站点</li><li>设定/搜索&amp;站点 配置搜索站点</li><li>设定/订阅 配置订阅站点</li><li>设定/服务 有什么想及时运行的定时任务可以在这边直接点，比如“同步CookieCloud站点”马上同步站点到 MP</li></ul></li><li>在 MP 通过推荐/主动搜索 查询媒体资源并下载/先行订阅 <ul><li>等候 MP 根据配置下载整理好到媒体库</li><li>对于设置好的 MP 订阅有多好用，我举个例子：前阵子的 《秘密关卡》 前后两部分是分开放送的，我手动搜索下载了前半部，订阅了下半部，后面出了包含后半部全集的种子，在满足我设定好的 订阅规则 和 优先级规则组 的前提下 它给我下好了 全集种子里面我没有的集数</li></ul></li><li>客户端使用海报墙选取媒体，开始观看</li></ul><h3 id="_2-0-客户端效果示例" tabindex="-1"><a class="header-anchor" href="#_2-0-客户端效果示例" aria-hidden="true">#</a> 2.0.客户端效果示例</h3><h4 id="jellyfin" tabindex="-1"><a class="header-anchor" href="#jellyfin" aria-hidden="true">#</a> Jellyfin</h4><figure><img src="'+p+'" alt="Jellyfin 手机客户端示意" tabindex="0" loading="lazy"><figcaption>Jellyfin 手机客户端示意</figcaption></figure><h4 id="infuse" tabindex="-1"><a class="header-anchor" href="#infuse" aria-hidden="true">#</a> Infuse</h4><figure><img src="'+d+'" alt="Infuse 手机客户端示意" tabindex="0" loading="lazy"><figcaption>Infuse 手机客户端示意</figcaption></figure><p>下面详细列出软件详情</p><h3 id="_2-1-基础软件" tabindex="-1"><a class="header-anchor" href="#_2-1-基础软件" aria-hidden="true">#</a> 2.1.基础软件</h3>',13),P={href:"https://brew.sh/",target:"_blank",rel:"noopener noreferrer"},w=n("li",null,"一个开源软件包管理器",-1),y=n("li",null,"可以理解为一个命令行版本的、包含应用范围更广阔的应用商店",-1),T=n("li",null,"使安装软件变得简单，轻松保持软件的更新。通过一致的、用户友好的命令行界面，来简化来自不同来源的软件包的安装过程",-1),S={href:"https://geekuninstaller.com/",target:"_blank",rel:"noopener noreferrer"},M={href:"https://freemacsoft.net/appcleaner/",target:"_blank",rel:"noopener noreferrer"},H={href:"https://brew.sh/",target:"_blank",rel:"noopener noreferrer"},C={href:"https://orbstack.dev/",target:"_blank",rel:"noopener noreferrer"},D={href:"https://formulae.brew.sh/cask/orbstack",target:"_blank",rel:"noopener noreferrer"},B=n("li",null,"一个专门为 Docker 和容器化应用设计的 MacOS 容器运行时环境",-1),I=n("li",null,"有了这个就能用 Docker 镜像的形式运行各种软件了",-1),q={href:"https://www.docker.com/products/docker-desktop/",target:"_blank",rel:"noopener noreferrer"},N={href:"https://docs.orbstack.dev/docker/host-networking",target:"_blank",rel:"noopener noreferrer"},L=n("li",null,"在这种模式下，容器不会被分配独立的 IP 地址，而是直接使用宿主机的网络栈。这意味着容器中的服务将绑定到宿主机的接口，并且可以直接访问外部网络，就像它们是在宿主机上运行的一样。",-1),A={href:"https://blog.csdn.net/qq_42937522/article/details/109052954",target:"_blank",rel:"noopener noreferrer"},F=n("li",null,"原因未知，用 Docker Desktop 的时候，我把 ExFAT 格式的移动移动硬盘挂载到镜像，遇到了各种权限问题，用 OrbStack 就没事",-1),U=n("h3",{id:"_2-2-家庭媒体服务相关软件",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_2-2-家庭媒体服务相关软件","aria-hidden":"true"},"#"),e(" 2.2.家庭媒体服务相关软件")],-1),R={href:"https://jellyfin.org/",target:"_blank",rel:"noopener noreferrer"},X={href:"https://formulae.brew.sh/cask/jellyfin#default",target:"_blank",rel:"noopener noreferrer"},E=n("li",null,"媒体服务解决方案",-1),J=n("li",null,"开源，让您完全掌控自己的媒体。通过您自己的服务器将媒体流传输到任何设备，没有任何附加条件。您的媒体，您的服务器，尽在您的掌控之中。",-1),V={href:"https://emby.media/",target:"_blank",rel:"noopener noreferrer"},z={href:"https://www.plex.tv/",target:"_blank",rel:"noopener noreferrer"},O={href:"https://metatube-community.github.io/README_ZH/",target:"_blank",rel:"noopener noreferrer"},j={href:"https://github.com/metatube-community/metatube-sdk-go/blob/main/docker-compose.yaml",target:"_blank",rel:"noopener noreferrer"},G={href:"https://metatube-community.github.io/wiki/plugin-installation/",target:"_blank",rel:"noopener noreferrer"},W=n("li",null,"搭配 Jellyfin、Emby、Plex 等媒体服务器使用的 XXX 🔞 特殊资源刮削工具",-1),$=n("li",null,"单独部署后端",-1),Y=n("li",null,"媒体服务器安装对应插件，并配置好后端实用",-1),Z=n("li",null,[e("DLNA 插件 "),n("ul",null,[n("li",null,"提供给不适合安装客户端的地方使用，比如 VR 眼镜 Quest3 上的播放器")])],-1),K={href:"https://www.qbittorrent.org/",target:"_blank",rel:"noopener noreferrer"},Q={href:"https://formulae.brew.sh/cask/qbittorrent",target:"_blank",rel:"noopener noreferrer"},nn=n("li",null,"PT 常用下载器",-1),en={href:"https://transmissionbt.com/",target:"_blank",rel:"noopener noreferrer"},ln={href:"https://formulae.brew.sh/cask/transmission",target:"_blank",rel:"noopener noreferrer"},sn=n("li",null,"PT 做种更好用的下载器",-1),tn={href:"https://www.xunlei.com/",target:"_blank",rel:"noopener noreferrer"},an={href:"https://formulae.brew.sh/cask/thunder",target:"_blank",rel:"noopener noreferrer"},on=n("li",null,"BT 常用下载器",-1),rn=n("li",null,"有时下热门资源比 PT 还厉害（前提是有最高级会员）",-1),un=n("li",null,"带一个迅雷网盘",-1),cn={href:"https://www.tinymediamanager.org/",target:"_blank",rel:"noopener noreferrer"},pn={href:"https://formulae.brew.sh/cask/tinymediamanager",target:"_blank",rel:"noopener noreferrer"},dn=n("li",null,"媒体管理工具",-1),_n=n("li",null,"它旨在为媒体服务器提供元数据（就是所谓的刮削，抓取海报墙用得到的图片和媒体信息）",-1),hn=n("li",null,"可以手动操作此软件，刮削一些自动刮削工具死活不行的",-1),mn={id:"_2-3-pt-相关软件",tabindex:"-1"},bn=n("a",{class:"header-anchor",href:"#_2-3-pt-相关软件","aria-hidden":"true"},"#",-1),vn={href:"http://2.3.PT",target:"_blank",rel:"noopener noreferrer"},kn={href:"https://wiki.movie-pilot.org/",target:"_blank",rel:"noopener noreferrer"},fn={href:"https://wiki.movie-pilot.org/zh/install",target:"_blank",rel:"noopener noreferrer"},gn=n("li",null,"开源媒体库自动化管理工具",-1),xn=n("li",null,"媒体搜索、订阅下载",-1),Pn=n("li",null,[e("媒体整理 "),n("ul",null,[n("li",null,"从下载库（下载器下载的媒体存储到的位置）"),n("li",null,"整理到媒体库（媒体服服务器如 Jellyfin 设置的媒体库目录）"),n("li",null,"可进行刮削")])],-1),wn=n("li",null,"额外通过插件可实现 数据统计、刷流、辅种（IYUU）、签到 等实用功能",-1),yn={href:"https://github.com/easychen/CookieCloud",target:"_blank",rel:"noopener noreferrer"},Tn=n("ul",null,[n("li",null,"可以用于把 PT 站 Cookie 同步到 MP，从而自动添加站点到 MP")],-1),Sn=n("li",null,"真的衷心感谢此工具作者的付出与贡献，超棒的软件 ❤️",-1),Mn={href:"https://github.com/pt-plugins/PT-Plugin-Plus",target:"_blank",rel:"noopener noreferrer"},Hn={href:"https://github.com/pt-plugins/PT-Plugin-Plus/releases",target:"_blank",rel:"noopener noreferrer"},Cn=n("li",null,"是一款浏览器插件（Web Extensions），一个可以提升 PT 站点使用效率的工具",-1),Dn=n("li",null,"支持更多 PT 站的简单管理，数据统计等",-1),Bn={href:"https://doc.iyuu.cn/",target:"_blank",rel:"noopener noreferrer"},In={href:"https://doc.iyuu.cn/guide/install-docker-compose",target:"_blank",rel:"noopener noreferrer"},qn=n("li",null,"辅种工具",-1),Nn=n("li",null,"辅种的操作就是：很多一样的资源会被发布到不同的 PT 站点，只需要下载一次就可以用于多个种子做种",-1),Ln=n("li",null,"还能用于转移种子，比如用 qBittorrent 下载之后转移到 Transmission 做种（因为 Tr 比起 qB 更适合做很多种，占用少，可以根据种子数量和机器性能决定用不用转移）",-1),An=n("li",null,"可以单独安装，如无特殊需求其实可以用 MP 里面的插件",-1),Fn={href:"https://github.com/tomorrow505/auto_feed_js",target:"_blank",rel:"noopener noreferrer"},Un={href:"https://greasyfork.org/zh-CN/scripts/424132-auto-feed",target:"_blank",rel:"noopener noreferrer"},Rn=n("li",null,"PT 站一键转载脚本",-1),Xn=n("li",null,"将 A 站资源转到还没有此资源的 B 站，可以帮助资源流动",-1),En={href:"https://www.tampermonkey.net/",target:"_blank",rel:"noopener noreferrer"},Jn={href:"https://github.com/XIU2/CloudflareSpeedTest",target:"_blank",rel:"noopener noreferrer"},Vn=n("li",null,"CloudFlare 优选 ip 工具",-1),zn=n("li",null,"很多网站都在使用 Cloudflare CDN，但分配给中国内地访客的 IP 并不友好（延迟高、丢包多、速度慢）",-1),On=n("li",null,"站点打不开、tracker 连不上等 可能就是因为这个，可以用此软件优选 IP 后添加 Host 解决",-1),jn={href:"https://github.com/oldj/SwitchHosts",target:"_blank",rel:"noopener noreferrer"},Gn={href:"https://github.com/PBH-BTN/PeerBanHelper",target:"_blank",rel:"noopener noreferrer"},Wn=n("li",null,"自动封禁不受欢迎、吸血和异常的 BT 客户端，并支持自定义规则",-1),$n={href:"https://docs.pbh-btn.com/docs/setup/Docker",target:"_blank",rel:"noopener noreferrer"},Yn=n("li",null,"帮助提高上传质量",-1),Zn={href:"https://wiki.vertex-app.top/",target:"_blank",rel:"noopener noreferrer"},Kn=n("ul",null,[n("li",null,"适用于 PT 玩家的追剧刷流一体化综合管理工具"),n("li",null,"主要用于刷流")],-1),Qn={href:"https://github.com/jerry048/Dedicated-Seedbox",target:"_blank",rel:"noopener noreferrer"},ne=n("ul",null,[n("li",null,"PT 盒子脚本"),n("li",null,"租盒子部署刷流环境使用")],-1),ee=n("h3",{id:"_2-4-可能会需要的软件推荐",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_2-4-可能会需要的软件推荐","aria-hidden":"true"},"#"),e(" 2.4.可能会需要的软件推荐")],-1),le={href:"https://www.microsoft.com/en-us/edge?form=",target:"_blank",rel:"noopener noreferrer"},se={href:"https://formulae.brew.sh/cask/microsoft-edge",target:"_blank",rel:"noopener noreferrer"},ie=n("li",null,"微软的网页浏览器",-1),te=n("li",null,"同步收藏夹很方便",-1),ae=n("li",null,"基于 Chromium 内核允许用户使用广泛的 Chrome 扩展程序(如 Tampermonkey、PT-Plugin-Plus)",-1),oe={href:"https://iina.io/",target:"_blank",rel:"noopener noreferrer"},re={href:"https://formulae.brew.sh/cask/iina",target:"_blank",rel:"noopener noreferrer"},ue=n("li",null,"适用于 macOS 的现代媒体播放器",-1),ce=n("li",null,"一个单独的挺好用的播放器",-1),pe={href:"https://code.visualstudio.com/",target:"_blank",rel:"noopener noreferrer"},de={href:"https://formulae.brew.sh/cask/visual-studio-code",target:"_blank",rel:"noopener noreferrer"},_e=n("li",null,"微软的一款免费且开源的代码编辑器，支持多种编程语言，并具有丰富的扩展插件生态系统",-1),he=n("li",null,"VS Code 以其轻量级、高性能和高度可定制的特点而广受欢迎，适用于各种类型的开发工作，从简单的脚本编写到复杂的应用程序开发",-1),me=n("li",null,"用来写写 配置文件 是很好用的，比如 Docker Compose 文件",-1),be={href:"https://theunarchiver.com/",target:"_blank",rel:"noopener noreferrer"},ve={href:"https://formulae.brew.sh/cask/the-unarchiver",target:"_blank",rel:"noopener noreferrer"},ke=n("li",null,"解压软件",-1),fe=n("li",null,"在 Mac 上打开 RAR 文件所需的唯一应用程序。没有过多的存在感直接双击压缩包就可以用",-1),ge={href:"https://clash-verge-rev.github.io/",target:"_blank",rel:"noopener noreferrer"},xe={href:"https://formulae.brew.sh/cask/clash-verge-rev",target:"_blank",rel:"noopener noreferrer"},Pe=n("li",null,"您好，我理解您可能对网络工具有所关注。但需要明确的是，在中国，使用未经批准的 VPN 或类似工具（如 Clash 及其变体）来绕过国家网络监管措施是违反相关法律法规的行为。",-1),we={href:"https://nssurge.com/",target:"_blank",rel:"noopener noreferrer"},ye={href:"https://formulae.brew.sh/cask/surge",target:"_blank",rel:"noopener noreferrer"},Te=n("li",null,"同样是网络工具，好用就是有点贵，想便宜点可以考虑拼车，有试用",-1),Se={href:"https://github.com/jeessy2/ddns-go",target:"_blank",rel:"noopener noreferrer"},Me={href:"https://formulae.brew.sh/formula/ddns-go",target:"_blank",rel:"noopener noreferrer"},He=n("li",null,"自动获得你的公网 IPv4 或 IPv6 地址，并解析到对应的域名服务",-1),Ce=n("li",null,"配合公网 IP 和 DNS 服务商（如 Cloudflare），达到把自家服务通过域名暴露到公网的目的",-1),De={href:"https://nginx.org/",target:"_blank",rel:"noopener noreferrer"},Be={href:"https://formulae.brew.sh/formula/nginx",target:"_blank",rel:"noopener noreferrer"},Ie=n("li",null,"一个 HTTP Web 服务器、反向代理服务器、内容缓存、负载均衡器、TCP/UDP 代理服务器和邮件代理服务器",-1),qe=n("li",null,"这里主要用于反向代理",-1),Ne=n("li",null,"也可以用 Docker compose 安装",-1),Le=i(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># Nginx Docker Compose 示例</span>
services:
nginx:
  image: nginx:latest
  container_name: nginx_proxy
  network_mode: <span class="token string">&quot;host&quot;</span>  <span class="token comment"># 使用宿主机网络模式</span>
  volumes:
    - ./nginx.conf:/etc/nginx/conf.d/default.conf <span class="token comment">#挂载配置文件</span>
    - ./certs:/etc/nginx/certs <span class="token comment">#挂载证书</span>
    - ./log:/var/log/nginx <span class="token comment">#挂载日志</span>
  environment:   
    - <span class="token string">&#39;TZ=Asia/Shanghai&#39;</span> <span class="token comment">#设置时区</span>
  restart: unless-stopped <span class="token comment">#设置ß重启</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># Nginx 配置文件示例</span>

<span class="token comment"># 共享的SSL配置</span>
ssl_certificate /etc/nginx/certs/your.domain.pem<span class="token punctuation">;</span>
ssl_certificate_key /etc/nginx/certs/your.domain.key<span class="token punctuation">;</span>
ssl_protocols TLSv1.2 TLSv1.3<span class="token punctuation">;</span> <span class="token comment"># 确保只使用较新的TLS版本</span>
ssl_ciphers HIGH:<span class="token operator">!</span>aNULL:<span class="token operator">!</span>MD5<span class="token punctuation">;</span>

<span class="token comment"># 默认服务器块，阻止所有未匹配的请求 (HTTPS)</span>
server <span class="token punctuation">{</span>
    listen <span class="token number">8443</span> ssl default_server<span class="token punctuation">;</span>
    listen <span class="token punctuation">[</span>::<span class="token punctuation">]</span>:8443 ssl default_server<span class="token punctuation">;</span>

    server_name _<span class="token punctuation">;</span>

    <span class="token builtin class-name">return</span> <span class="token number">403</span><span class="token punctuation">;</span> <span class="token comment"># 返回403 Forbidden状态码</span>
<span class="token punctuation">}</span>

server <span class="token punctuation">{</span>
    listen <span class="token number">8443</span> ssl<span class="token punctuation">;</span>
    listen <span class="token punctuation">[</span>::<span class="token punctuation">]</span>:8443 ssl<span class="token punctuation">;</span>

    server_name alive.your.domain<span class="token punctuation">;</span>

    location / <span class="token punctuation">{</span>
        <span class="token builtin class-name">return</span> <span class="token number">200</span> <span class="token string">&#39;Hi!\\n&#39;</span><span class="token punctuation">;</span>
        add_header Content-Type text/plain<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

server <span class="token punctuation">{</span>
    listen <span class="token number">8443</span> ssl<span class="token punctuation">;</span>
    listen <span class="token punctuation">[</span>::<span class="token punctuation">]</span>:8443 ssl<span class="token punctuation">;</span>
    
    http2 on<span class="token punctuation">;</span>

    server_name moviepilot.your.domain<span class="token punctuation">;</span>

    location / <span class="token punctuation">{</span>
        proxy_pass http://192.168.1.1:3000<span class="token punctuation">;</span> <span class="token comment"># 目标服务的地址</span>
        proxy_set_header Host <span class="token variable">$http_host</span><span class="token punctuation">;</span>
        proxy_set_header X-Real-IP <span class="token variable">$remote_addr</span><span class="token punctuation">;</span>
        proxy_set_header X-Forwarded-For <span class="token variable">$proxy_add_x_forwarded_for</span><span class="token punctuation">;</span>
        proxy_set_header X-Forwarded-Proto <span class="token variable">$scheme</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment"># MP 企业微信通知相关： 配置可信域名需完成域名归属认证</span>
    location ~<span class="token punctuation">(</span>WW_verify_<span class="token punctuation">)</span>*<span class="token punctuation">\\</span>.<span class="token punctuation">(</span>txt<span class="token punctuation">)</span>$ <span class="token punctuation">{</span>
    root /var/log/nginx<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment"># MP 企业微信通知相关： 2022年6月后新建的企业微信应用需要有固定公网IP的代理才能接收到消息，代理添加以下代码：</span>
    <span class="token comment"># see https://wiki.movie-pilot.org/zh/notification</span>
    location /cgi-bin/gettoken <span class="token punctuation">{</span>
    proxy_pass https://qyapi.weixin.qq.com<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    location /cgi-bin/message/send <span class="token punctuation">{</span>
        proxy_pass https://qyapi.weixin.qq.com<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    location  /cgi-bin/menu/create <span class="token punctuation">{</span>
        proxy_pass https://qyapi.weixin.qq.com<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

server <span class="token punctuation">{</span>
    listen <span class="token number">8443</span> ssl<span class="token punctuation">;</span>
    listen <span class="token punctuation">[</span>::<span class="token punctuation">]</span>:8443 ssl<span class="token punctuation">;</span>
    
    http2 on<span class="token punctuation">;</span>

    server_name qBittorrent.your.domain<span class="token punctuation">;</span>

    location / <span class="token punctuation">{</span>
        <span class="token comment"># see https://github.com/qbittorrent/qBittorrent/wiki/NGINX-Reverse-Proxy-for-Web-UI</span>

        proxy_pass http://192.168.1.1:8088<span class="token punctuation">;</span> <span class="token comment"># 目标服务的地址</span>
        proxy_http_version <span class="token number">1.1</span><span class="token punctuation">;</span>
      

        <span class="token comment"># headers recognized by qBittorrent</span>
        proxy_set_header   Host               <span class="token variable">$proxy_host</span><span class="token punctuation">;</span>
        proxy_set_header   X-Forwarded-For    <span class="token variable">$proxy_add_x_forwarded_for</span><span class="token punctuation">;</span>
        proxy_set_header   X-Forwarded-Host   <span class="token variable">$http_host</span><span class="token punctuation">;</span>
        proxy_set_header   X-Forwarded-Proto  <span class="token variable">$scheme</span><span class="token punctuation">;</span>

        <span class="token comment"># optionally, you can adjust the POST request size limit, to allow adding a lot of torrents at once</span>
        <span class="token comment"># client_max_body_size 100M;</span>

        <span class="token comment"># No longer required since qBittorrent v5.1:</span>
        <span class="token comment"># Since v4.2.2, is possible to configure qBittorrent</span>
        <span class="token comment"># to set the &quot;Secure&quot; flag for the session cookie automatically.</span>
        <span class="token comment"># However, that option does nothing unless using qBittorrent&#39;s built-in HTTPS functionality.</span>
        <span class="token comment"># For this use case, where qBittorrent itself is using plain HTTP</span>
        <span class="token comment"># (and regardless of whether or not the external website uses HTTPS),</span>
        <span class="token comment"># the flag must be set here, in the proxy configuration itself.</span>
        <span class="token comment"># Note: If this flag is set while the external website uses only HTTP, this will cause</span>
        <span class="token comment"># the login mechanism to not work without any apparent errors in console/network resulting in &quot;auth loops&quot;.</span>
        proxy_cookie_path  /                  <span class="token string">&quot;/; Secure&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

server <span class="token punctuation">{</span>
    listen <span class="token number">8443</span> ssl<span class="token punctuation">;</span>
    listen <span class="token punctuation">[</span>::<span class="token punctuation">]</span>:8443 ssl<span class="token punctuation">;</span>

    http2 on<span class="token punctuation">;</span>

    server_name jellyfin.your.domain<span class="token punctuation">;</span>

    location / <span class="token punctuation">{</span>
        proxy_pass http://192.168.1.1:8096<span class="token punctuation">;</span> <span class="token comment"># 替换为目标服务的地址</span>
        proxy_set_header Host <span class="token variable">$proxy_host</span><span class="token punctuation">;</span>
        proxy_set_header X-Real-IP <span class="token variable">$remote_addr</span><span class="token punctuation">;</span>
        proxy_set_header X-Forwarded-For <span class="token variable">$proxy_add_x_forwarded_for</span><span class="token punctuation">;</span>
        proxy_set_header X-Forwarded-Proto <span class="token variable">$scheme</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),Ae={href:"https://nginxproxymanager.com/",target:"_blank",rel:"noopener noreferrer"},Fe={href:"https://alist.nn.ci/zh/",target:"_blank",rel:"noopener noreferrer"},Ue=n("li",null,"一个支持多种存储的文件列表程序",-1),Re=n("li",null,"可以用于挂载多种网盘（包括 阿里云、迅雷云盘、115 等）",-1),Xe={href:"https://alist.nn.ci/zh/guide/webdav.html",target:"_blank",rel:"noopener noreferrer"},Ee={href:"https://rclone.org/",target:"_blank",rel:"noopener noreferrer"},Je=n("li",null,"Rclone 是一个命令行程序，用于管理云端存储上的文件",-1),Ve=n("li",null,"用户可以在本地系统中像使用普通磁盘一样访问云存储",-1),ze={href:"https://www.clouddrive2.com/download.html",target:"_blank",rel:"noopener noreferrer"},Oe={href:"https://yi.gs/",target:"_blank",rel:"noopener noreferrer"},je={href:"https://github.com/alienator88/Pearcleaner",target:"_blank",rel:"noopener noreferrer"},Ge=n("ul",null,[n("li",null,"一款免费、开源、好用的 Mac 应用程序清理器")],-1),We={href:"https://github.com/louislam/dockge",target:"_blank",rel:"noopener noreferrer"},$e=n("ul",null,[n("li",null,"Docker Compose 管理器"),n("li",null,"可搭配 OrbStack 使用")],-1),Ye=n("h2",{id:"_3-对-bt-pt-下载的认识",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_3-对-bt-pt-下载的认识","aria-hidden":"true"},"#"),e(" 3.对 BT/PT 下载的认识")],-1),Ze=n("p",null,"BT/PT 下载的本意我理解是：人人为我，我为人人。自己下载的时候别人提供了上传，理所应当的自己也要做种，在别人下载的时候提供上传，这样形成一个良性循环大家都可以有的下，且速度足够高。",-1),Ke=n("p",null,"理想是丰满的，可惜现实是不如人意的。都不说无限制可以下完就跑的 BT，PT 现在也没有设想的那般美好",-1),Qe=n("p",null,"我觉得合理的路线：",-1),nl=n("li",null,"BT 迅雷充值最高级会员",-1),el=n("li",null,[e("我判断，现在已经不是适合自己家宽刷上传的时代了 "),n("ul",null,[n("li",null,"大站都是盒子（租赁的有商业宽带的服务器专门用于刷数据）家宽上传小水管抢不过"),n("li",null,[e("小站你倒是可以传，传多了宽带运营商（某些地区）要找你麻烦给你限速 "),n("ul",null,[n("li",null,"治理 PCDN 之名，节省跨省结算支出之实")])])])],-1),ll=n("li",null,"小站会不定期开放注册，可以从 PT 贴吧/ 站点 Telegram ✈️ 群获取开放注册消息",-1),sl=n("li",null,"也可以从上述渠道求到站点邀请（PT 站普遍是邀请注册制）",-1),il=n("li",null,"站点地址可以从 PTPP 里面找",-1),tl={href:"https://pthub.cc/",target:"_blank",rel:"noopener noreferrer"},al=n("ul",null,[n("li",null,"严格意义上讲，不太适合聚集传播，所以不知道这个导航可以存在多久")],-1),ol=n("li",null,[e("研究一下 IYUU 辅种（无论是用 MP 插件还是单独安装） "),n("ul",null,[n("li",null,[e("如之前所说，不同站点有很多相同资源，只要下载过一次可以多处做种，换取魔力和可能的上传量，魔力一般也可以用于换取上传量 "),n("ul",null,[n("li",null,"所谓魔力是一种积分，魔力或茉莉是其普遍叫法")])]),n("li",null,"上传量在 PT 的意义就是 分享率=上传量/下载量 有上传才可以下载，分享率太难看基本会被站点 BAN")])],-1),rl=n("li",null,"对于有考核的站点，先利用已有资源辅种，再下载免费资源（选择上传少下载多的资源更有利于做种的时候有上传量），保种赚魔力换上传",-1),ul=n("li",null,[e("刷上传量、辅种 MP 里面都有对应插件可以定时任务自动，不耗费什么精力 "),n("ul",null,[n("li",null,"前提是懂得这些操作的意义，并配置好，刷流配置失误的结果可能是走向速通")])],-1),cl=n("li",null,[e("花钱把 PT 当 BT 用 "),n("ul",null,[n("li",null,[e("可以研究一下 捐赠入大站 + 盒子刷上传 "),n("ul",null,[n("li",null,"自己租赁盒子用脚本搭建环境，或者直接咸鱼租配置好的盒子（代刷是不安全且不被允许的）")])]),n("li",null,"示例：找准站免时间，捐一个月馒头，然后去租个盒子爆刷一个月，刷个几百 T ，好长一段时间都随便下载了")])],-1),pl=n("p",null,"我推荐的新人友好站点：",-1),dl={href:"https://cyanbug.net/",target:"_blank",rel:"noopener noreferrer"},_l=n("ul",null,[n("li",null,"青虫娘，求下载"),n("li",null,"青虫娘，求上传"),n("li",null,"青虫娘，求彩虹ID"),n("li",null,"青虫娘，求魔力"),n("li",null,"青虫娘，求vip"),n("li",null,"真的超爽的好吧")],-1),hl={href:"https://www.qingwapt.com/",target:"_blank",rel:"noopener noreferrer"},ml=n("ul",null,[n("li",null,"蛙总，求上传"),n("li",null,"蛙总，求下载"),n("li",null,"此站捐赠为公益捐则，真正的践行 人人为我，我为人人 的公益站，真的是很有精神！希望此站长存")],-1),bl={href:"https://fsm.name/",target:"_blank",rel:"noopener noreferrer"},vl=n("ul",null,[n("li",null,"XXX 🔞 资源站"),n("li",null,"无新手考核"),n("li",null,"PT 站形式的新探索，从零开始的新架构，希望此站越办越好")],-1),kl=i('<p>请求邀请：<br> 有路过的大佬给我发发大站的邀请就太好了</p><figure><img src="'+_+`" alt="PTPP 数据统计" tabindex="0" loading="lazy"><figcaption>PTPP 数据统计</figcaption></figure><p>邮箱（Base64 编码）：</p><p>hotmail:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>a25pZ2h0b2ZiYXRvbnNAaG90bWFpbC5jb20=
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>gmail:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>a25pZ2h0b2ZiYXRvbnNAZ21haWwuY29t
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_4-硬盘盒的选择" tabindex="-1"><a class="header-anchor" href="#_4-硬盘盒的选择" aria-hidden="true">#</a> 4.硬盘盒的选择</h2><ul><li><p>RTL9210/RTL9210b 主控方案</p><ul><li>10Gbps 普通硬盘盒，几十块就可以买到不错的</li><li>追求 待机功耗低 发热小</li><li>适合内置系统（无特殊需求内置系统完全够用，哪怕是 256GB 硬盘丐版）</li><li>一直插着就存存数据，不需要多高速度</li></ul></li><li><p>ASM2464PD 主控方案</p><ul><li>标称 40Gbps 的 USB4 硬盘盒</li><li>接口兼容性较好</li><li>功耗高 发热量大，需要考察散热能力（主动散热风扇、大鳍片、金属外壳）</li><li>适合需要频繁插拔拷贝文件，对速度有要求</li></ul></li><li><p>JHL7440 主控方案</p><ul><li>标称 40Gbps 的 雷电3（或译为 雷雳3） 硬盘盒</li><li>适合外置系统（外置系统对速度有要求）</li><li>追求速度 &amp; 功耗 发热量 的平衡点</li></ul></li><li><p>JHL7440 + RTL9210/9210b/JMS583 双主控方案</p><ul><li>额外加的主控增加了接口的兼容性，也提高了售价，有需求可选</li></ul></li></ul><h2 id="_5-硬盘的选择" tabindex="-1"><a class="header-anchor" href="#_5-硬盘的选择" aria-hidden="true">#</a> 5.硬盘的选择</h2><p>我的理解：外置硬盘盒里面的硬盘，选个原厂、便宜、无缓存的（发热相对低也更便宜）就可以了</p><p>最后纳入我的选择的是：铠侠 SD10 / 致态 Ti7100 ，可惜更便宜的 SD10 截止现在没有 4TB 版本最多到 2TB，而雷电接口支持多 SSD 阵列的设备价格普遍比较离谱</p>`,12),fl={href:"https://tieba.baidu.com/p/9190335174?see_lz=1",target:"_blank",rel:"noopener noreferrer"},gl=i('<figure><img src="'+h+'" alt="硬盘选择" tabindex="0" loading="lazy"><figcaption>硬盘选择</figcaption></figure><h2 id="_6-电视的选择" tabindex="-1"><a class="header-anchor" href="#_6-电视的选择" aria-hidden="true">#</a> 6.电视的选择</h2><ul><li>我的 Mac mini 没直接接电视，鼠标操作真的没法算“家庭”媒体中心，家里除了折腾的我没人愿意用鼠标操作电视</li><li>电视选的 LG <ul><li>OLED 体验好</li><li>WEBOS 系统比一堆广告的瀑布流好</li><li>买工程遥控器（MKJ39170828）可以转外区装 APP <ul><li>Jellyfin 客户端（其实 WEBOS 不装这个客户端也可以，因为支持 DLNA ，就是没海报墙）</li><li>Netflix 客户端 <ul><li>等等主流流媒体客户端</li></ul></li></ul></li><li>自带浏览器可以局域网直接访问 MP 和 qB 等软件的 WebUI 控制订阅和下载等操作 <ul><li>LG 的遥控器可以靠指向控制光标 比只能按上下左右的那种遥控器控制网页方便很多</li></ul></li></ul></li></ul><figure><img src="'+m+'" alt="LG 遥控器指向控制光标示意" tabindex="0" loading="lazy"><figcaption>LG 遥控器指向控制光标示意</figcaption></figure><h2 id="_7-fttr-不桥接-公网设置" tabindex="-1"><a class="header-anchor" href="#_7-fttr-不桥接-公网设置" aria-hidden="true">#</a> 7.FTTR 不桥接，公网设置</h2><p>以联通普遍使用的华为 F30/F50 为例</p><figure><img src="'+b+'" alt="网络示意" tabindex="0" loading="lazy"><figcaption>网络示意</figcaption></figure><ul><li>桥接不是必要的，尤其对于 FTTR 还会损失功能（有的区域不给改桥接）</li><li>用机身上普通用户账号登陆光猫控制台</li><li>应用/高级 NAT 配置 <ul><li>DMZ 相当于把一个主机暴露到公网，除非你知道你在干什么否则不建议</li><li>IPv4 虚拟主机配置，这边可以设定端口转发，配置公网的什么外部端口可以通到内部的什么主机什么端口</li><li>IPv6 虚拟主机配置，这边也是设定端口转发 <ul><li>需要特别注意的是 这里的内部主机地址如果选的是公网地址，而 IPv6 公网地址变动会比较频繁，就不用像 IPv4 那样配置内部主机地址（非必填），直接设置端口号的对应就好了，避免因为 IP 变化而失效</li></ul></li><li>除了要暴露的服务端口，记得把下载器端口也配置好，虽然有 UPnP 功能但是好像不太支持我们用的软件</li></ul></li><li>多说一个我遇到的情况：使用同一个域名 不同的路由 domain:port/xxx1、domain:port/xxx2 进行反向代理的时候，部分 WebUI 会各种报错，于是改成了不同子域名代理到不同服务</li></ul><figure><img src="'+v+'" alt="光猫控制台示意" tabindex="0" loading="lazy"><figcaption>光猫控制台示意</figcaption></figure>',9);function xl(Pl,wl){const l=a("ExternalLinkIcon");return o(),r("div",null,[f,g,u("more"),x,n("ul",null,[n("li",null,[n("p",null,[n("a",P,[e("Homebrew"),s(l)])]),n("ul",null,[w,y,T,n("li",null,[e("首次使用 MacOS 最困扰我的一点就是非 App Store 软件安装与卸载，安装靠拖拽，卸载不干净 "),n("ul",null,[n("li",null,[e("想找个像 Windows 下 "),n("a",S,[e("Geek Uninstaller"),s(l)]),e(" 那样优秀的卸载工具")]),n("li",null,[e("找到了类似的 "),n("a",M,[e("AppCleaner"),s(l)]),e(" 也很优秀但是还不够")]),n("li",null,[e("发现用 "),n("a",H,[e("Homebrew"),s(l)]),e(" 统一安装管理更优雅，且绝大部分软件都可以")])])])])]),n("li",null,[n("p",null,[n("a",C,[e("OrbStack"),s(l)])]),n("ul",null,[n("li",null,[n("a",D,[e("Homebrew 安装 OrbStack"),s(l)])]),B,I,n("li",null,[e("它旨在提供比 "),n("a",q,[e("Docker Desktop"),s(l)]),e(" 更加优化和高效的体验，特别是在 macOS 上运行 Linux 容器时。")]),n("li",null,[e("它有开箱即用的 "),n("a",N,[e("Host 网络模式"),s(l)]),n("ul",null,[L,n("li",null,[e("这对 Docker 安装的某些软件非常重要（比如 Nginx、Home Assistant），需要用到的时候就知道了，不支持的时候解决起来可是个麻烦事 "),n("ul",null,[n("li",null,[e("不支持的麻烦可以参考这篇文章："),n("a",A,[e("Mac系统下docker容器无法使用--net host共享宿主机端口的解决方案"),s(l)])])])])])]),F])])]),U,n("ul",null,[n("li",null,[n("p",null,[n("a",R,[e("Jellyfin"),s(l)])]),n("ul",null,[n("li",null,[n("a",X,[e("Homebrew 安装 Jellyfin"),s(l)])]),E,J,n("li",null,[e("可以对比选择的媒体服务解决方案： "),n("ul",null,[n("li",null,[n("a",V,[e("Emby"),s(l)])]),n("li",null,[n("a",z,[e("Plex"),s(l)])])])]),n("li",null,[e("刮削插件 "),n("a",O,[e("MetaTube"),s(l)]),n("ul",null,[n("li",null,[n("a",j,[e("Docker Compose 安装 MetaTube 后端"),s(l)])]),n("li",null,[n("a",G,[e("安装对应媒体库插件"),s(l)])]),W,$,Y])]),Z])]),n("li",null,[n("p",null,[n("a",K,[e("qBittorrent"),s(l)])]),n("ul",null,[n("li",null,[n("a",Q,[e("Homebrew 安装 qBittorrent"),s(l)])]),nn])]),n("li",null,[n("p",null,[n("a",en,[e("Transmission"),s(l)])]),n("ul",null,[n("li",null,[n("a",ln,[e("Homebrew 安装 qBittorrent"),s(l)])]),sn])]),n("li",null,[n("p",null,[n("a",tn,[e("Thunder/迅雷"),s(l)])]),n("ul",null,[n("li",null,[n("a",an,[e("Homebrew 安装 Thunder/迅雷"),s(l)])]),on,rn,un])]),n("li",null,[n("p",null,[n("a",cn,[e("tinyMediaManager"),s(l)])]),n("ul",null,[n("li",null,[n("a",pn,[e("Homebrew 安装 tinyMediaManager"),s(l)])]),dn,_n,hn])])]),n("h3",mn,[bn,e(),n("a",vn,[e("2.3.PT"),s(l)]),e(" 相关软件")]),n("ul",null,[n("li",null,[n("p",null,[e("🌟"),n("a",kn,[e("MP"),s(l)])]),n("ul",null,[n("li",null,[n("a",fn,[e("Docker Compose 安装 MP"),s(l)])]),gn,xn,Pn,n("li",null,[e("统一管理支持的 PT 站 "),n("ul",null,[wn,n("li",null,[e("配合 Cookie 同步 浏览器插件 "),n("a",yn,[e("CookieCloud"),s(l)]),Tn])])]),Sn])]),n("li",null,[n("p",null,[n("a",Mn,[e("PT 助手 Plus（简称 PTPP）"),s(l)])]),n("ul",null,[n("li",null,[n("a",Hn,[e("浏览器插件安装"),s(l)])]),Cn,Dn])]),n("li",null,[n("p",null,[n("a",Bn,[e("IYUU"),s(l)])]),n("ul",null,[n("li",null,[n("a",In,[e("Docker Compose 安装 IYUU"),s(l)])]),qn,Nn,Ln,An])]),n("li",null,[n("p",null,[n("a",Fn,[e("auto_feed"),s(l)])]),n("ul",null,[n("li",null,[n("a",Un,[e("Tampermonkey 安装 auto_feed"),s(l)])]),Rn,Xn,n("li",null,[e("需要依托于浏览器插件 "),n("a",En,[e("Tampermonkey"),s(l)])])])]),n("li",null,[n("p",null,[n("a",Jn,[e("CloudflareSpeedTest"),s(l)])]),n("ul",null,[Vn,zn,On,n("li",null,[e("顺便推荐 Host 管理工具 "),n("a",jn,[e("SwitchHosts"),s(l)])])])]),n("li",null,[n("p",null,[n("a",Gn,[e("PeerBanHelper"),s(l)])]),n("ul",null,[Wn,n("li",null,[n("a",$n,[e("Docker Compose 安装 PeerBanHelper"),s(l)])]),Yn])]),n("li",null,[n("p",null,[n("a",Zn,[e("VERTEX"),s(l)])]),Kn]),n("li",null,[n("p",null,[n("a",Qn,[e("Seedbox Installation Script"),s(l)])]),ne])]),ee,n("ul",null,[n("li",null,[n("p",null,[n("a",le,[e("Microsoft Edge"),s(l)])]),n("ul",null,[n("li",null,[n("a",se,[e("Homebrew 安装 Microsoft Edge"),s(l)])]),ie,te,ae])]),n("li",null,[n("p",null,[n("a",oe,[e("IINA"),s(l)])]),n("ul",null,[n("li",null,[n("a",re,[e("Homebrew 安装 IINA"),s(l)])]),ue,ce])]),n("li",null,[n("p",null,[n("a",pe,[e("VS Code"),s(l)])]),n("ul",null,[n("li",null,[n("a",de,[e("Homebrew 安装 VS Code"),s(l)])]),_e,he,me])]),n("li",null,[n("p",null,[n("a",be,[e("The Unarchiver"),s(l)])]),n("ul",null,[n("li",null,[n("a",ve,[e("Homebrew 安装 The Unarchiver"),s(l)])]),ke,fe])]),n("li",null,[n("p",null,[n("a",ge,[e("Clash Verge Rev"),s(l)])]),n("ul",null,[n("li",null,[n("a",xe,[e("Homebrew 安装 Clash Verge Rev"),s(l)])]),Pe])]),n("li",null,[n("p",null,[n("a",we,[e("Suger"),s(l)])]),n("ul",null,[n("li",null,[n("a",ye,[e("Homebrew 安装 Suger"),s(l)])]),Te])]),n("li",null,[n("p",null,[n("a",Se,[e("ddns-go"),s(l)])]),n("ul",null,[n("li",null,[n("a",Me,[e("Homebrew 安装 ddns-go"),s(l)])]),He,Ce])]),n("li",null,[n("p",null,[n("a",De,[e("Nginx"),s(l)])]),n("ul",null,[n("li",null,[n("a",Be,[e("Homebrew 安装 Nginx"),s(l)])]),Ie,qe,Ne]),Le,n("ul",null,[n("li",null,[e("想图形化界面使用 Nginx 可以看看 "),n("a",Ae,[e("Nginx Proxy Manager"),s(l)])])])]),n("li",null,[n("p",null,[n("a",Fe,[e("AList"),s(l)])]),n("ul",null,[Ue,Re,n("li",null,[e("可以网盘转 "),n("a",Xe,[e("WebDAV"),s(l)])])])]),n("li",null,[n("p",null,[n("a",Ee,[e("RCLONE"),s(l)])]),n("ul",null,[Je,Ve,n("li",null,[e("可以用于把 WebDAV 挂载到本地等 "),n("ul",null,[n("li",null,[e("进而可以添加到媒体服务器，当然这用法有点绕 "),n("ul",null,[n("li",null,[e("可能有更好的解决方案，比如 "),n("a",ze,[e("CloudDrive"),s(l)])])])])])])])])]),n("p",null,[e("❤️ 感谢评论区大佬："),n("a",Oe,[e("Yi"),s(l)]),e(" 推荐的两个软件我试了一下也非常好用，详见评论")]),n("ul",null,[n("li",null,[n("p",null,[n("a",je,[e("Pearcleaner"),s(l)])]),Ge]),n("li",null,[n("p",null,[n("a",We,[e("Dockge"),s(l)])]),$e])]),Ye,Ze,Ke,Qe,n("ul",null,[nl,n("li",null,[e("PT "),n("ul",null,[el,n("li",null,[e("想慢慢玩 "),n("ul",null,[n("li",null,[e("慢慢收集小站 逐步走向大站 "),n("ul",null,[ll,sl,il,n("li",null,[e("最近有一个导航可以参考："),n("a",tl,[e("PTHUb"),s(l)]),al])])]),ol,rl,ul])]),cl])])]),pl,n("ul",null,[n("li",null,[n("a",dl,[e("大青虫🐛"),s(l)]),_l]),n("li",null,[n("a",hl,[e("青蛙🐸"),s(l)]),ml]),n("li",null,[n("a",bl,[e("FSM🍜"),s(l)]),vl])]),kl,n("p",null,[n("a",fl,[e("一个不错的总结供参考"),s(l)])]),gl])}const Sl=t(k,[["render",xl],["__file","Mac_mini_m4_Family_Media_Center.html.vue"]]);export{Sl as default};
