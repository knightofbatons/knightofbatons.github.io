const e=JSON.parse('{"key":"v-33426b6a","path":"/posts/Resources/%E5%A6%82%E4%BD%95%E7%86%9F%E6%82%89%E6%96%B0%E9%A1%B9%E7%9B%AE.html","title":"如何熟悉新项目","lang":"zh-CN","frontmatter":{"title":"如何熟悉新项目","date":"2023-05-18T00:00:00.000Z","category":["方法论"],"tag":["模板"],"description":"大的方向上 程序员如何快速上手一个新项目？ 不要事无巨细地请教老同学，要有 Owner 的心态 熟悉业务 用户是谁、提供的核心功能是什么、系统在上下游的地位是什么。不涉及具体的实现细节，通过核心功能产品层面的熟悉，能够对项目有一个全局性把握。 熟悉部署结构 最新的代码在哪，测试环境如何搭建，监控告警有哪些，线上如何部署，线上机器分布情况等等，通过自己亲自发布一次代码，观察哪些指标，了解整体的发布流程以及部署情况。 从问题中学习 系统较为复杂时，实现细节太多，直接上手看代码熟悉链路的实现细节效率较低，比较好的方式是通过实际问题，了解一个问题的来龙去脉，通过具体问题的修复过程中，逐步熟悉整个系统，但需要把熟悉的部分整理到整体的认识当中。 Owner 的心态 接手一个系统，就需要以 Owner 心态对待。有些同学习惯性的事无巨细都请教老同学，心底有所依赖，缺少了一份独立思考，成长起来就相对较慢。遇到疑问要首先要自己做一个判断，不论判断的是否正确，经过一次思考后，对系统的理解将会上一个台阶。","head":[["meta",{"property":"og:url","content":"https://blog.nerv.love/posts/Resources/%E5%A6%82%E4%BD%95%E7%86%9F%E6%82%89%E6%96%B0%E9%A1%B9%E7%9B%AE.html"}],["meta",{"property":"og:site_name","content":"KnightOfBatons Blog"}],["meta",{"property":"og:title","content":"如何熟悉新项目"}],["meta",{"property":"og:description","content":"大的方向上 程序员如何快速上手一个新项目？ 不要事无巨细地请教老同学，要有 Owner 的心态 熟悉业务 用户是谁、提供的核心功能是什么、系统在上下游的地位是什么。不涉及具体的实现细节，通过核心功能产品层面的熟悉，能够对项目有一个全局性把握。 熟悉部署结构 最新的代码在哪，测试环境如何搭建，监控告警有哪些，线上如何部署，线上机器分布情况等等，通过自己亲自发布一次代码，观察哪些指标，了解整体的发布流程以及部署情况。 从问题中学习 系统较为复杂时，实现细节太多，直接上手看代码熟悉链路的实现细节效率较低，比较好的方式是通过实际问题，了解一个问题的来龙去脉，通过具体问题的修复过程中，逐步熟悉整个系统，但需要把熟悉的部分整理到整体的认识当中。 Owner 的心态 接手一个系统，就需要以 Owner 心态对待。有些同学习惯性的事无巨细都请教老同学，心底有所依赖，缺少了一份独立思考，成长起来就相对较慢。遇到疑问要首先要自己做一个判断，不论判断的是否正确，经过一次思考后，对系统的理解将会上一个台阶。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-06-17T15:10:27.000Z"}],["meta",{"property":"article:author","content":"KnightOfBatons"}],["meta",{"property":"article:tag","content":"模板"}],["meta",{"property":"article:published_time","content":"2023-05-18T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-06-17T15:10:27.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"如何熟悉新项目\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-05-18T00:00:00.000Z\\",\\"dateModified\\":\\"2023-06-17T15:10:27.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"KnightOfBatons\\",\\"url\\":\\"https://blog.nerv.love\\"}]}"]]},"headers":[{"level":2,"title":"大的方向上","slug":"大的方向上","link":"#大的方向上","children":[{"level":3,"title":"不要事无巨细地请教老同学，要有 Owner 的心态","slug":"不要事无巨细地请教老同学-要有-owner-的心态","link":"#不要事无巨细地请教老同学-要有-owner-的心态","children":[]},{"level":3,"title":"认识各类大中型项目演进历程，有助于你真正理解一个项目","slug":"认识各类大中型项目演进历程-有助于你真正理解一个项目","link":"#认识各类大中型项目演进历程-有助于你真正理解一个项目","children":[]}]},{"level":2,"title":"实践细节","slug":"实践细节","link":"#实践细节","children":[]},{"level":2,"title":"模板","slug":"模板","link":"#模板","children":[]}],"git":{"createdTime":1687014627000,"updatedTime":1687014627000,"contributors":[{"name":"Yu Chen","email":"knightofbatons@hotmail.com","commits":1}]},"readingTime":{"minutes":3.89,"words":1168},"filePathRelative":"posts/Resources/如何熟悉新项目.md","localizedDate":"2023年5月18日","excerpt":"<h2> 大的方向上</h2>\\n<p><a href=\\"https://baijiahao.baidu.com/s?id=1712306698362265893&amp;wfr=spider&amp;for=pc\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">程序员如何快速上手一个新项目？</a></p>\\n<h3> 不要事无巨细地请教老同学，要有 Owner 的心态</h3>\\n<ul>\\n<li>熟悉业务\\n<ul>\\n<li>用户是谁、提供的核心功能是什么、系统在上下游的地位是什么。不涉及具体的实现细节，通过核心功能产品层面的熟悉，能够对项目有一个全局性把握。</li>\\n</ul>\\n</li>\\n<li>熟悉部署结构\\n<ul>\\n<li>最新的代码在哪，测试环境如何搭建，监控告警有哪些，线上如何部署，线上机器分布情况等等，通过自己亲自发布一次代码，观察哪些指标，了解整体的发布流程以及部署情况。</li>\\n</ul>\\n</li>\\n<li>从问题中学习\\n<ul>\\n<li>系统较为复杂时，实现细节太多，直接上手看代码熟悉链路的实现细节效率较低，比较好的方式是通过实际问题，<strong>了解一个问题的来龙去脉，通过具体问题的修复过程中，逐步熟悉整个系统，但需要把熟悉的部分整理到整体的认识当中。</strong></li>\\n</ul>\\n</li>\\n<li>Owner 的心态\\n<ul>\\n<li>接手一个系统，就需要以 Owner 心态对待。有些同学习惯性的事无巨细都请教老同学，心底有所依赖，缺少了一份独立思考，成长起来就相对较慢。<strong>遇到疑问要首先要自己做一个判断，不论判断的是否正确，经过一次思考后，对系统的理解将会上一个台阶。</strong></li>\\n</ul>\\n</li>\\n</ul>","autoDesc":true}');export{e as data};
